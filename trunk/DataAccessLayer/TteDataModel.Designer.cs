//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Class_PeriodPlanning", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Planning), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Class), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Class_Planning", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Planning), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Class), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Event_OwnerPlanning", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Planning), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Event), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Event_Planning", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Planning), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Event), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Event_SpeakerPlaning", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Planning), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Event), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Event_Subject", "Modality", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Modality), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Event), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Modality_Subject", "Modality", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Modality), "Modality1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Modality), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Period_Planning", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Planning), "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Period), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Plannings_Parent", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Planning), "Planning1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Planning), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Right_Campus", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Planning), "Right", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Right), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_User_Planing", "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Planning), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.User), true)]
[assembly: EdmRelationshipAttribute("TteDataModel", "FK_Right_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.User), "Right", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Right), true)]

#endregion

namespace DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Class
        {
            get
            {
                if ((_Class == null))
                {
                    _Class = base.CreateObjectSet<Class>("Class");
                }
                return _Class;
            }
        }
        private ObjectSet<Class> _Class;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Event
        {
            get
            {
                if ((_Event == null))
                {
                    _Event = base.CreateObjectSet<Event>("Event");
                }
                return _Event;
            }
        }
        private ObjectSet<Event> _Event;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Modality> Modality
        {
            get
            {
                if ((_Modality == null))
                {
                    _Modality = base.CreateObjectSet<Modality>("Modality");
                }
                return _Modality;
            }
        }
        private ObjectSet<Modality> _Modality;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Period> Period
        {
            get
            {
                if ((_Period == null))
                {
                    _Period = base.CreateObjectSet<Period>("Period");
                }
                return _Period;
            }
        }
        private ObjectSet<Period> _Period;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Planning> Planning
        {
            get
            {
                if ((_Planning == null))
                {
                    _Planning = base.CreateObjectSet<Planning>("Planning");
                }
                return _Planning;
            }
        }
        private ObjectSet<Planning> _Planning;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Right> Right
        {
            get
            {
                if ((_Right == null))
                {
                    _Right = base.CreateObjectSet<Right>("Right");
                }
                return _Right;
            }
        }
        private ObjectSet<Right> _Right;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Class EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClass(Class @class)
        {
            base.AddObject("Class", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Event EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvent(Event @event)
        {
            base.AddObject("Event", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modality EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModality(Modality modality)
        {
            base.AddObject("Modality", modality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Period EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriod(Period period)
        {
            base.AddObject("Period", period);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Planning EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlanning(Planning planning)
        {
            base.AddObject("Planning", planning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Right EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRight(Right right)
        {
            base.AddObject("Right", right);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        public static Class CreateClass(global::System.Int32 id, global::System.Int32 period)
        {
            Class @class = new Class();
            @class.Id = id;
            @class.Period = period;
            return @class;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Class_PeriodPlanning", "Planning")]
        public Planning PeriodPlanning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Class_PeriodPlanning", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Class_PeriodPlanning", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> PeriodPlanningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Class_PeriodPlanning", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Class_PeriodPlanning", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Class_Planning", "Planning")]
        public Planning Planning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Class_Planning", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Class_Planning", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> PlanningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Class_Planning", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Class_Planning", "Planning", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="planning">Initial value of the Planning property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="mandatory">Initial value of the Mandatory property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.String name, global::System.Int32 planning, global::System.DateTime start, global::System.DateTime end, global::System.Boolean mandatory, global::System.Int32 owner)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.Name = name;
            @event.Planning = planning;
            @event.Start = start;
            @event.End = end;
            @event.Mandatory = mandatory;
            @event.Owner = owner;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Planning
        {
            get
            {
                return _Planning;
            }
            set
            {
                OnPlanningChanging(value);
                ReportPropertyChanging("Planning");
                _Planning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Planning");
                OnPlanningChanged();
            }
        }
        private global::System.Int32 _Planning;
        partial void OnPlanningChanging(global::System.Int32 value);
        partial void OnPlanningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Mandatory
        {
            get
            {
                return _Mandatory;
            }
            set
            {
                OnMandatoryChanging(value);
                ReportPropertyChanging("Mandatory");
                _Mandatory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mandatory");
                OnMandatoryChanged();
            }
        }
        private global::System.Boolean _Mandatory;
        partial void OnMandatoryChanging(global::System.Boolean value);
        partial void OnMandatoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Speaker
        {
            get
            {
                return _Speaker;
            }
            set
            {
                OnSpeakerChanging(value);
                ReportPropertyChanging("Speaker");
                _Speaker = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speaker");
                OnSpeakerChanged();
            }
        }
        private Nullable<global::System.Int32> _Speaker;
        partial void OnSpeakerChanging(Nullable<global::System.Int32> value);
        partial void OnSpeakerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.Int32 _Owner;
        partial void OnOwnerChanging(global::System.Int32 value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private Nullable<global::System.Int32> _Subject;
        partial void OnSubjectChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_OwnerPlanning", "Planning")]
        public Planning OwnerRef
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_OwnerPlanning", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_OwnerPlanning", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> OwnerRefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_OwnerPlanning", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Event_OwnerPlanning", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_Planning", "Planning")]
        public Planning PlaningRef
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_Planning", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_Planning", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> PlaningRefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_Planning", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Event_Planning", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_SpeakerPlaning", "Planning")]
        public Planning SpeakerRef
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_SpeakerPlaning", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_SpeakerPlaning", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> SpeakerRefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Event_SpeakerPlaning", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Event_SpeakerPlaning", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_Subject", "Modality")]
        public Modality Modality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("TteDataModel.FK_Event_Subject", "Modality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("TteDataModel.FK_Event_Subject", "Modality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modality> ModalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("TteDataModel.FK_Event_Subject", "Modality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modality>("TteDataModel.FK_Event_Subject", "Modality", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="Modality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Modality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Modality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        public static Modality CreateModality(global::System.Int32 id, global::System.Byte[] name, global::System.Int32 hours)
        {
            Modality modality = new Modality();
            modality.Id = id;
            modality.Name = name;
            modality.Hours = hours;
            return modality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Name
        {
            get
            {
                return StructuralObject.GetValidValue(_Name);
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.Byte[] _Name;
        partial void OnNameChanging(global::System.Byte[] value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private Nullable<global::System.Int32> _Subject;
        partial void OnSubjectChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private global::System.Int32 _Hours;
        partial void OnHoursChanging(global::System.Int32 value);
        partial void OnHoursChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_Subject", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("TteDataModel.FK_Event_Subject", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("TteDataModel.FK_Event_Subject", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Modality_Subject", "Modality1")]
        public EntityCollection<Modality> Modalitys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Modality>("TteDataModel.FK_Modality_Subject", "Modality1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Modality>("TteDataModel.FK_Modality_Subject", "Modality1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Modality_Subject", "Modality")]
        public Modality OnSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("TteDataModel.FK_Modality_Subject", "Modality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("TteDataModel.FK_Modality_Subject", "Modality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modality> OnSubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("TteDataModel.FK_Modality_Subject", "Modality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modality>("TteDataModel.FK_Modality_Subject", "Modality", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="Period")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Period : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Period object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        public static Period CreatePeriod(global::System.Int32 id, global::System.DateTime start, global::System.DateTime end)
        {
            Period period = new Period();
            period.Id = id;
            period.Start = start;
            period.End = end;
            return period;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Period_Planning", "Planning")]
        public Planning Planning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Period_Planning", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Period_Planning", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> PlanningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Period_Planning", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Period_Planning", "Planning", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="Planning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Planning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Planning object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastChange">Initial value of the LastChange property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Planning CreatePlanning(global::System.Int32 id, global::System.String name, global::System.DateTime lastChange, global::System.Int32 type)
        {
            Planning planning = new Planning();
            planning.Id = id;
            planning.Name = name;
            planning.LastChange = lastChange;
            planning.Type = type;
            return planning;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent;
        partial void OnParentChanging(Nullable<global::System.Int32> value);
        partial void OnParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChange
        {
            get
            {
                return _LastChange;
            }
            set
            {
                OnLastChangeChanging(value);
                ReportPropertyChanging("LastChange");
                _LastChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChange");
                OnLastChangeChanged();
            }
        }
        private global::System.DateTime _LastChange;
        partial void OnLastChangeChanging(global::System.DateTime value);
        partial void OnLastChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Class_PeriodPlanning", "Class")]
        public EntityCollection<Class> PeriodClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("TteDataModel.FK_Class_PeriodPlanning", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("TteDataModel.FK_Class_PeriodPlanning", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Class_Planning", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TteDataModel.FK_Class_Planning", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TteDataModel.FK_Class_Planning", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TteDataModel.FK_Class_Planning", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("TteDataModel.FK_Class_Planning", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_OwnerPlanning", "Event")]
        public EntityCollection<Event> OwnedEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("TteDataModel.FK_Event_OwnerPlanning", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("TteDataModel.FK_Event_OwnerPlanning", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_Planning", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("TteDataModel.FK_Event_Planning", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("TteDataModel.FK_Event_Planning", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Event_SpeakerPlaning", "Event")]
        public EntityCollection<Event> SpeakingEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("TteDataModel.FK_Event_SpeakerPlaning", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("TteDataModel.FK_Event_SpeakerPlaning", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Period_Planning", "Period")]
        public Period Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("TteDataModel.FK_Period_Planning", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("TteDataModel.FK_Period_Planning", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("TteDataModel.FK_Period_Planning", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("TteDataModel.FK_Period_Planning", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Plannings_Parent", "Planning1")]
        public EntityCollection<Planning> ChildrenPlannings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Planning>("TteDataModel.FK_Plannings_Parent", "Planning1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Planning>("TteDataModel.FK_Plannings_Parent", "Planning1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Plannings_Parent", "Planning")]
        public Planning ParentPlanning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Plannings_Parent", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Plannings_Parent", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> ParentPlanningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Plannings_Parent", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Plannings_Parent", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Right_Campus", "Right")]
        public EntityCollection<Right> Rights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Right>("TteDataModel.FK_Right_Campus", "Right");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Right>("TteDataModel.FK_Right_Campus", "Right", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_User_Planing", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TteDataModel.FK_User_Planing", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TteDataModel.FK_User_Planing", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TteDataModel.FK_User_Planing", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TteDataModel.FK_User_Planing", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="Right")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Right : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Right object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="user">Initial value of the User property.</param>
        public static Right CreateRight(global::System.Int32 id, global::System.Int32 user)
        {
            Right right = new Right();
            right.Id = id;
            right.User = user;
            return right;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.Int32 _User;
        partial void OnUserChanging(global::System.Int32 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Campus
        {
            get
            {
                return _Campus;
            }
            set
            {
                OnCampusChanging(value);
                ReportPropertyChanging("Campus");
                _Campus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Campus");
                OnCampusChanged();
            }
        }
        private Nullable<global::System.Int32> _Campus;
        partial void OnCampusChanging(Nullable<global::System.Int32> value);
        partial void OnCampusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Right_Campus", "Planning")]
        public Planning CampusPlanning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Right_Campus", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Right_Campus", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> CampusPlanningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_Right_Campus", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_Right_Campus", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Right_User", "User")]
        public User UserRef
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TteDataModel.FK_Right_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TteDataModel.FK_Right_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserRefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TteDataModel.FK_Right_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TteDataModel.FK_Right_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TteDataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String login, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.Login = login;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_User_Planing", "Planning")]
        public Planning Planning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_User_Planing", "Planning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_User_Planing", "Planning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Planning> PlanningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Planning>("TteDataModel.FK_User_Planing", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Planning>("TteDataModel.FK_User_Planing", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TteDataModel", "FK_Right_User", "Right")]
        public EntityCollection<Right> Rights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Right>("TteDataModel.FK_Right_User", "Right");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Right>("TteDataModel.FK_Right_User", "Right", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
