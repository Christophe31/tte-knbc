<?xml version="1.0"?>
<configuration>
	<system.webServer>
		<modules runAllManagedModulesForAllRequests="true"/>
	</system.webServer>

	<connectionStrings>
		<add name="TteDataBase" connectionString="metadata=res://*/TteDataBase.csdl|res://*/TteDataBase.ssdl|res://*/TteDataBase.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=.\SQLEXPRESS;Initial Catalog=tte-knbc;Integrated Security=True;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" />
		<add name="Entities" connectionString="metadata=res://*/TteDataModel.csdl|res://*/TteDataModel.ssdl|res://*/TteDataModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=CROVAX-LAPTOP7\SQLEXPRESS;Initial Catalog=tte-bcdkn;Integrated Security=True;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" />
	</connectionStrings>

	<system.web>
		<compilation debug="true" targetFramework="4.0" />
	</system.web>

	<system.serviceModel>
		
		<bindings>
			<!--
			<webHttpBinding>
				<binding name="myHttpBinding">
					<security mode="Transport">
						<transport clientCredentialType="Basic" />
					</security>
				</binding>
			</webHttpBinding>
			-->
			<customBinding>
				<binding name="myHttpBindingConf">
					<context contextManagementEnabled="true" protectionLevel="None"/>
					<!--<security authenticationMode="SecureConversation"
						allowSerializedSigningTokenOnReply="true"
							  requireSecurityContextCancellation="false"
							canRenewSecurityContextToken="true"
							  enableUnsecuredResponse="true"
							  allowInsecureTransport="true">
						<secureConversationBootstrap authenticationMode="UserNameForCertificate" requireSignatureConfirmation="false" allowInsecureTransport="true" />
					</security>-->
					<textMessageEncoding/>
					<httpTransport useDefaultWebProxy="false" />
				</binding>
			</customBinding>
		</bindings>

		<!--	<standardEndpoints>
			<webHttpEndpoint>
				    <standardEndpoint name="epc" defaultOutgoingResponseFormat="Json">
     <security mode="Transport">
      <transport clientCredentialType="Basic" />
     </security>
    </standardEndpoint>

			</webHttpEndpoint>
		</standardEndpoints>
-->
		<serviceHostingEnvironment multipleSiteBindingsEnabled="true" />

		<services>
			<service behaviorConfiguration="a" name="BusinessLayer.BusinessService">
				<endpoint address="BusinessService" binding="customBinding" bindingConfiguration="myHttpBindingConf"
     name="BusinessService" bindingName="BusinessLayerBinding" bindingNamespace="BusinessLayer"
     contract="BusinessLayer.IBusinessService" isSystemEndpoint="false"
      >
					<identity>
						<dns value="localhost" />
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" name="mex" contract="IMetadataExchange" />
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:2900" />
						<add baseAddress="https://localhost:8000"/>
					</baseAddresses>
				</host>
			</service>
			<service behaviorConfiguration="a" name="BusinessLayer.BusinessLayer">
				<endpoint address="BusinessLayer" binding="customBinding" bindingConfiguration="myHttpBindingConf"
     name="BusinessLayer" bindingName="BusinessLayerBinding" bindingNamespace="BusinessLayer"
     contract="BusinessLayer.IBusinessLayer" isSystemEndpoint="false"
      >
					<identity>
						<dns value="localhost" />
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" name="mex" contract="IMetadataExchange" />
				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:2900" />
						<!-- <add baseAddress="https://localhost:8000" /> -->
					</baseAddresses>
				</host>
			</service>
		</services>

		<behaviors>
   <serviceBehaviors>
    <behavior name="a">
     <serviceMetadata httpGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="true" />
     <serviceCredentials>
      <userNameAuthentication userNamePasswordValidationMode="Custom"
       customUserNamePasswordValidatorType="BusinessLayer.AuthValidator, BusinessLayer" />
     </serviceCredentials>
    </behavior>
    <behavior name="">
     <serviceMetadata httpGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
   </serviceBehaviors>
  </behaviors>

	</system.serviceModel>
</configuration>
