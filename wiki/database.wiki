#summary Description de la base de données

= Introduction =

Ce modèle remplace l'ancien schéma de base de données, en étant plus simple et extensible que le précédent, et en permettant de faire des méthodes et des requêtes plus génériques.

= Organisation =

== Schéma ==

http://www.mypicturesbox.com/photos/originales/crovax31/55007.png


== Explications ==

La base est organisée autour de deux tables principales, Planning et Event. D'autres tables, enrichissent les plannings, quand certaines données sont spécifiques à certains types de plannings (voir la section suviante). Les données de ces tables étant très fortement liées aux plannings, les clés primaires de ces tables sont identiques à celles de la table principale, et sont également des clés étrangères (liaison 1 à 1).


=== Plannings ===

Le cahier des charges demande de stocker des évènements liés, au choix, à l'université, un campus, une période d'études, une classe ou un utilisateur (évènements privés). Le moyen le plus simple pour centraliser la gestion de ces entités est de toutes les considérer comme des plannings, et de lier tous les évènements à un planning particulier. En effet, elles partagent un ensemble d'informations : un nom, une date de dernière modification et un _parent_.

Toutes ces entités dépendent les unes des autres, on peut modéliser ces dépendances sous la forme d'un arbre :

{{{
Université (racine de l'arbre : son parent est nul)
  |
  +-> Campus
  |    |
  |    +-> Classe
  |         |
  |         +-> Utilisateur (peut ne pas être rattaché à une classe, si l'utilisateur n'est pas étudiant)
  +-> Promotion
       |
       +-> Période d'études
}}}

Un autre champ apparait dans une ligne de Planning, son type (un entier lié à une énumération dans le code C#). Il permet de préciser la place d'un planning dans l'aborescence, tout en évitant les conflits (un utilisateur pourrait être confondu avec l'université, si sont parent est nul). Seule la promotion n'a pas de type (null), puisqu'elle n'est pas un vrai planning (elle n'a pas d'évènements).

Deux tables, Class et Period, ajoutent quelques informations au planning correspondant :

  * Class ajoute un lien entre une période et une classe, puisqu'il ne peut pas être stocké dans l'arbre
  * Period précise la date de début et de fin d'une période


=== Utilisateurs ===

La table User, moins liée à Planning que les précédentes, est la table utilisateur, qui stocke les logins et mots de passe. Le nom de l'utilisateur est stocké dans le champ "Name" de son planning.

La table Role permet de stocker les rôles des utilisateurs. Suivant le planning vers lequel pointe la colonne Target, le service web déduit le rôle. Si le planning pointé est l'université, alors il est administrateur, si c'est vers un campus, alors il est campus manager, sinon (cible nulle), il est intervenant (la présence des intervenanats ici permet d'optimiser les requêtes permettant de retrouver cette liste.


=== Evènements ===

Les évènements sont stockés dans la table Event, qui contient un titre, le planning dont il dépend, les dates de début et de fin, son caractère obligatoire, le lieu où il se déroule, l'intervenant et le propriétaire de l'objet (qui pointent vers les plannings de ces utilisateurs), ainsi que la matière, s'il s'agit d'un cours.

Les matières sont stockées dans une dernière table, Modality, qui stocke les matières et les modalités. Chaque modalité stocke son nom et son nombre d'heures, et pointe vers sa matière parent (dans la même table), qui stocke uniquement son nom.