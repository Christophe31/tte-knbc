_by Christophe Narbonne_

= Introduction =
Le Projet de groupe Time Table Easy proposé par SUPINFO est un défi que notre équipe semble mener à bien. Nous avons commencé ce projet en nous réunissant dans une équipe de personnalités différentes et complémentaires. Le fait de commencer par faire une équipe permet de ne pas délaisser dans la phase de choix de départs les membres de l'équipe.

= Choix technologiques =

La première version du sujet ne nous laissait pas nous poser cette question importante... Quels outils allons nous choisir? Ce choix fut notre première mission en temps qu'équipe et elle ne devai pas être négligée...

L'équipe étant dans l'ensemble assez ouverte sur le logiciel libre, nous avons pensé à pas mal de technologies autres que celles innitialement proposés, pour choisir des technologies, nous avons réfléchi architecture. Bien que le cahier des charges ne fesait pas mention de toute la problématique sécurité, il nous était évident que l'on ferai un minimum pour sécuriser un peu la base.. Faire un utilisateur DB par étudiant aurait imposé de nombreuses vues pour restreindre les droits de lecture sur les évènements privés, restreindre les accès aux donnés en n'accédant que par des procédure stoquées SQL nous a effleuré l'esprit mais nous nous doutions que nous ferions un service Front End en interface entre la base de donnée et internet. Coté client, notre équipe de base est assez hétérogène en therme de plateforme favorite, on a songé à l'intéroparabilité pour le développement et pour l'utilisation. Une possibilité qui avais retenu notre attention, un client en XUL (Javascript utilisant le moteur de firefox) avec un service web en php. Le sujet proposait d'autres technologies et nous avons admis que SQL Serveur était déjà installé chez le client, le sujet suggérais que la base d'utilisateurs était presque exclusivement sous Windows... Ayant dans notre équipe deux personnes relativement expérimentés en .NET et nous pensons que Microsoft, lorsqu'il est utilisé sur l'ensemble de la chaîne, leurs technologies sont intéressantes et les outils assistent agréablement les développeurs. Il y avait pas mal de nouveautés interessantes, la sorti de .NET 4, Visual studio 2010, bref, comme le sujet semblait encourager ce choix que nous avons suivi.

= Ressources humaines =
== Présentation de membres ==
La répartition des tâches fonctionelles a été assez naturelle dans l'équipe de départ. Voici la liste des membres et leurs points forts/points faibles:


*équipe de départ*

Romaric :
    * Experiences en développement web et en .NET (ASPX).
    * Pas de lacunes particulières...
    * Calme, posé, bonne orthographe et compréhension.
Romain : 
    * Experiences d'administrateur web.
    * Pas d'attraits particuliers pour le C#.
    * Efficace, synthétique, clair dans sa vision et son esprit.
Jeremy :
    * Experiences non spécialisées.
    * Pas de lacunes notables.
    * Serviable.
Christophe : 
    * Experiences en Linq et en NET.
    * Peu de compétances en interfaces graphique et en SQL.
    * Motivé, disponible. 

*Arrivé après la répartition des tâches*

Thomas : 
    * Experiences en python. 
    * Quelques lacunes en .NET.
    * Ouvert à la critique, attentif. 

== Répartitions des tâches ==
Voici le modèle de départ des tâches du projet:
  * Configuration et design de la base de donnée: Romain
  * Service Web: Christophe
  * Interface Administration : Jeremy
  * Interface Calandrier : Romaric

Il n'y avais aucune hiérarchi explicite, mais deux points importants rendaient remarquable deux personnes. Romaric avait lu plusieur fois le cahier des charges et le connaissais nettement mieux que les autres membres et Christophe animait un peu l'équipe et s'occupait de la mise en place et configuration des outils de collaboration.

Nous avons donc officialisé en interne ce qui se trammait la dessous en redéfinissant les rôles, de plus Thomas s'est ajouté à nos efectifs avec une deuxième révision:

Breil Romaric :
  * Responsable du respect du cahier des charges
  * Contrôle calandrier
  * Gros contributeur de l'organisation de la base de donnée
Cheynet de beauprés Romain :
  * Organisation avec Romaric de la base de donnée.
  * Design et ergonomie de l'interface.
Despax Thomas :
  * Imports
  * Exports
  * Cache
  * Interface entre l'interface graphique et le service web (pour gérer le cache)
Kornylo Jeremy :
  * Design et implémentation de toute l'interface d'administration hors ajout/suppression d'évènements
Narbonne Christophe :
  * Animateur du projet. Rôle de chef de projet, assez bonne vision d'ensemble car son service est en contact direct avec toutes les parties du développement.
  * Implémentation du service WCF.
  * Implémentation de la partie de connexion client/serveur.
  * Menthor de Thomas.
  * Gros contributeur de la gestion du cache.
  * Mise en place et configuration des outils.

Au final, on a pas mal collé à cette répartition des tâches de fonctionnement. Néanmoins il est heureux que nous n'ayont pas fait de diagrammes de Gant, Les gros bouleversements qu'ont entrénés une nouvelle base de donnée alors que l'ancienne  avait un service complet sur le plan fonctionnel, une nouvelle interface d'administration, (etc) nous a certe fais gagner une lisibilité de code, des appels et des fonctions plus génériques, mais était imprévisible et aurai chamboulé nos plans. Pour la documentation, chacun a été tenu de faire la documentation technique de sa partie. 

Du coup Romain s'est occupé de la ducumentation de l'interface utilisateur et de la documentation de la base de donnée par exemple...

Romaric ayant certaines compétances dans le domaines, il aura le mérite d'avoir relu l'intégralité de la documentation à la recherche d'éventuelles fautes de sens ou d'orthographe.

= Outils et moyens mis en place =
Cette partie prend une importance particulière du fait que la division supinfo/ingésup a littérallement scindé notre équipe, les heures allouées au projets de groupes no collaient même pas et nous nous croisions difficilement il fallait donc nécessairement centraliser la communication, permettre de limiter ce problème et avoir d'accessible tout notre projet pour tous nos membres...

==Centralisation du contenu==
Comme nous avons un gout pour le logiciel libre, ça nous a simplifer l'hébergement, beaucoup de sites permettent d'héberger du contenu libre. Nous avons choisi Google Code pour leur réputation de fiabilité des serveurs, d'efficacité de service, et car tout le monde dans notre groupe avait déjà un compte Google...

Ce service propose:
  * Système de gestion de révision (SVN ou mercurial).
  * Wiki.
  * hébergement de fichiers.
  * Bug tracker.

Il était évident que nous aurions utilisé un système de gestion de révision, après, la question SVN, Mercurial... on a pensé que SVN serait plus simple pour les plus néophites de notre équipe mais lors de gros changements, ou même dans certains contextes de merge, il manquait une bonne gestion des branche et la possibilité de commiter en local sans rendre la source au centre boguée.

Le wiki c'est avéré un moyen logique de centraliser notre documentation, centralisé, accessible, facile à retrouver.

L'hébergement de fichier a permis entre autre à Romain de nous soumettre des ressources sans passer par SVN et donc sans le client SVN.

Comme nous somme dans une petite équipe sans "béta testeurs" en dehors, nous n'avons pas utilisé le Bug tracker.

==Centralisation de la communication==
Pour la centralisation de la communication, nous avons utilisé différents outils, le wiki n'est pas un moyen adapté, il n'a pas de RSS par page ou de bon moyen de se tenir au courrent lors de nouvautés.

Nous avons utilisé une Mailing List pour permettre de communiquer avec les membres du groupe sans changer leurs habitudes.
Elle a été utilisée pour parler des points d'avancement important, pour fixer des deadlines, pour organiser des réunions, pour demmander et soumettre des suggestions publiques, à l'ensemble de l'équipe...
Pour ce service, ayant déjà sur google code notre projet, nous avons utilisé "google groups" pour éviter de faire des comptes partout.

Après pour le débug rapide, les demandes personnelles, nous avons pas mal utilisé la messagerie instentanée (Jabber, MSN).

Nous avons aussi mis en place un serveur Mumble, un espèce de Chat VOIP qui a pu permettre certaines petites réunions privés voire d'avoir virtuellement une personne indisponible lors d'une réunion. Il a aussi été utilisé "en tâche de fond" pendant le développement pour poser vite et clairement les questions... le problème de cet outil était principalement que jérémy vivant dans une cité universitaire, il son réseau ne laissait pas se connecter.

=Bilans Personnels=
Ces bilans ont étés écrits par les membres eux mèmes et sont donc à la première personne, comme des simples réflexions personelles.
==Breil Romaric==
==Cheynet Romain==
==Despax Thomas==
==Kornylo Jérémy==
==Narbonne Christophe==
Cette experiance fut une riche pour moi. C'est la première fois que j'ai véritablement l'impression de coder en groupe, je me suis beaucoup impliqué dans ce projet. Du fait de ma motivation, en espérant pouvoir tirer le projet de l'avant, j'ai proposé à l'équipe d'en prendre les rennes. Il n'y a pas eu d'oppositions. Ce projet a aussi été pour moi une de mes premières expériences de management. J'ai certainement commis des erreurs, il est parfois difficile de savoir si critiquer les autres vas les faire avancer ou les démoraliser, si être prétencieux et arrogant vas motiver un esprit de défi ou démotiver, si guider de près une personne vas l'aider à comprendre ou la rendre dépendente...

J'ai fais ce que sur le moment je pensais être le mieux et je n'ai pas vraiment les moyens de savoir ce qui aurait changé si j'avais fait différemment... J'ai eu la chance d'avoir une équipe qui accepte bien les critiques dans l'ensemble, même quand elles sont franches et tranchantes.

Sur le plan développement, je suis assez coutimier de git, c'est la première fois que j'utilise vraiment SVN, j'ai été un peu déçus par son incapacité à comprendre les déplacements de fichiers, les supression/renomages de dossiers en un nom qui existait déjà...
WCF est très simple, j'ai trouvé l'outil très bon à un détail prêt.... la configuration ma pris des plombes... Avoir une authentification, ou un stockage de variables par session avec une session non sécurisée... Une misère... j'ai du perdre 4 demies journées pour avoir une chose qui me satisfait vraiment. Maintenant que j'ai ça sous le coude, je pense que j'irai plus vite la prochaine fois.

Pour ce qui est du cache, du WPF, de la base de donnée, j'ai pas mal appris même si j'ai certainement gardé mes lacunes en gestion d'interfaces graphiques vu que je n'ai fait que la fenetre de login ;-).